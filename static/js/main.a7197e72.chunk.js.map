{"version":3,"sources":["components/movieList/Rating.module.css","components/search/Search.module.css","components/search/ResultsList.module.css","shared/header/Header.js","components/movieList/Rating.js","components/movieList/MovieCard.js","components/movieList/MovieList.js","components/search/ResultsList.js","config/Settings.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","style","flexGrow","variant","user","userName","Button","onClick","onLogout","Rating","ratings","Array","map","item","index","changeRating","this","Icon","movie","id","className","styles","star","userRating","starr","Component","MovieCard","deleteMovie","favoriteMovie","Card","CardActionArea","CardContent","CardMedia","image","description","original_title","release_date","CardActions","size","MovieList","Fragment","savedMovies","length","React","ResultsList","movies","Grid","container","xs","alt","src","imageUri","poster_path","poster","onAdd","Settings","API_URL","API_KEY","USER_SECRET","Search","state","searchResults","searchTerm","handleSearch","console","log","url","axios","get","then","response","setState","data","results","catch","error","handleChange","event","target","value","handleAdd","onMovieAdd","Container","TextField","placeholder","label","search","onChange","startIcon","favorite","App","slice","push","localStorage","setItem","JSON","stringify","handleAddUser","onUserChange","rating","find","Object","assign","filter","logout","removeItem","getItem","userDetails","parsedUser","parse","parsed","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,wB,mBCAtDD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,OAAS,8B,0OCoCZC,EA1BA,SAACC,GACd,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUC,aAAW,QAClD,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,SAAU,GAEZC,QAAQ,MAJV,cAQCX,EAAMY,MAAQ,8BAAOZ,EAAMY,KAAKC,UAChCb,EAAMY,MACL,kBAACE,EAAA,EAAD,CAAQC,QAASf,EAAMgB,SAAUV,MAAM,WAAvC,a,kHCCKW,E,uKAlBH,IAAD,OACDC,EAAU,YAAIC,MAAM,IAAIC,KAAI,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,KACnDC,EAAiBC,KAAKxB,MAAtBuB,aAER,OACE,6BACOL,EAAQE,KAAI,SAACC,GAChB,OACE,kBAACI,EAAA,EAAD,CAAMV,QAAS,kBAAMQ,EAAaF,EAAK,EAAKrB,MAAM0B,MAAMC,KAAKC,UAAWC,IAAOC,MAC7ET,IAAO,EAAKrB,MAAM0B,MAAMK,YAAc,GAAM,kBAAC,IAAD,CAAMH,UAAWC,IAAOC,OAAY,kBAAC,IAAD,CAAMF,UAAWC,IAAOG,iB,GAZjGC,a,iBCoCNC,EA5BG,SAAClC,GAAW,IACpB0B,EAAgD1B,EAAhD0B,MAAMH,EAA0CvB,EAA1CuB,aAAaY,EAA6BnC,EAA7BmC,YAAYC,EAAiBpC,EAAjBoC,cACvC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,GAAGC,YAAY,iBAChC,kBAAClC,EAAA,EAAD,CAAYG,QAAQ,MAAMe,EAAMiB,gBAChC,kBAACnC,EAAA,EAAD,CAAYG,QAAQ,QAAQL,MAAM,iBAC/BoB,EAAMkB,cAET,6BACE,kBAAC,EAAD,CAAQrB,aAAcA,EAAcG,MAAOA,OAIjD,kBAACmB,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,CAAQgC,KAAK,QAAQxC,MAAM,UAAUS,QAAS,kBAAIoB,EAAYT,EAAMC,MAApE,UAGA,kBAACb,EAAA,EAAD,CAAQgC,KAAK,QAAQxC,MAAM,UAAUS,QAAS,kBAAIqB,EAAcV,EAAMC,MACpE,kBAAC,IAAD,UCpBKoB,E,uKAXH,IAAD,OACP,OACE,kBAAC,IAAMC,SAAP,KACGxB,KAAKxB,MAAMiD,YAAYC,OAAS,EAC7B1B,KAAKxB,MAAMiD,YAAY7B,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAWK,MAAOL,EAAME,aAAc,EAAKvB,MAAMuB,aAAcY,YAAa,EAAKnC,MAAMmC,YAAaC,cAAe,EAAKpC,MAAMoC,mBACnK,mD,GAPYe,IAAMlB,W,6EC2CfmB,EA3BK,SAACpD,GAAD,OAClB,kBAAC,IAAMgD,SAAP,KACGhD,EAAMqD,OAAOjC,KAAI,SAACC,GAAD,OAChB,kBAACiC,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,IAClB,kBAACF,EAAA,EAAD,CAAMjC,MAAI,EAACmC,GAAI,GACb,yBACEC,IAAI,GACJC,KAZUC,EAYQtC,EAAKuC,YAX7BD,EAAgB,kCAAN,OAAyCA,GAC3C,uCAWF/B,UAAWC,IAAOgC,UAGtB,kBAACP,EAAA,EAAD,CAAMjC,MAAI,EAACmC,GAAI,GACZnC,EAAKsB,gBAER,kBAACW,EAAA,EAAD,CAAMjC,MAAI,EAACmC,GAAI,GACZnC,EAAKuB,cAER,kBAACU,EAAA,EAAD,CAAMjC,MAAI,EAACmC,GAAI,GACb,kBAACpD,EAAA,EAAD,CAAYW,QAAS,kBAAMf,EAAM8D,MAAMzC,KACrC,kBAAC,IAAD,SAxBS,IAACsC,OCRLI,EANA,CACbC,QAAS,+BACTC,QAAS,mCACTC,YAAa,I,iBCsFFC,E,4MA9EbC,MAAQ,CACNC,cAAe,GACfC,WAAY,I,EAGdC,aAAe,WACbC,QAAQC,IAAI,EAAKL,MAAME,YADJ,IAEFL,EAAYF,EAAZE,QAEXS,EAAG,UAFoBX,EAArBC,QAEC,iCAAsCC,EAAtC,kBAAuD,EAAKG,MAAME,YAE3EK,IACGC,IAAIF,GACJG,MAAK,SAACC,GACL,EAAKC,SAAS,CACZV,cAAeS,EAASE,KAAKC,aAGhCC,OAAM,SAACC,GAAD,OAAWX,QAAQC,IAAIU,O,EAWlCC,aAAe,SAACC,GACd,EAAKN,SAAS,CACZT,WAAYe,EAAMC,OAAOC,S,EAI7BC,UAAY,SAAC9D,GACX,EAAKqD,SAAS,CACZV,cAAe,GACfC,WAAY,KAEd,EAAKtE,MAAMyF,WAAW/D,I,uDAItB,OACE,kBAAC,IAAMsB,SAAP,KACE,kBAAC0C,EAAA,EAAD,CAAW9D,UAAWC,IAAO0B,WAC3B,kBAACoC,EAAA,EAAD,CACEC,YAAY,8BACZC,MAAM,SACNlF,QAAQ,WACRiB,UAAWC,IAAOiE,OAClBP,MAAO/D,KAAK4C,MAAME,WAClByB,SAAUvE,KAAK4D,eAEjB,kBAACtE,EAAA,EAAD,CACEH,QAAQ,WACRL,MAAM,SACN0F,UAAW,kBAAC,IAAD,MACXjF,QAASS,KAAK+C,cAJhB,WASD/C,KAAK4C,MAAMC,cAAcnB,OAAS,GACjC,kBAACwC,EAAA,EAAD,CAAW9D,UAAWC,IAAOoD,SAC3B,kBAAC,EAAD,CACE5B,OAAQ7B,KAAK4C,MAAMC,cACnBP,MAAOtC,KAAKgE,UACZS,SAAUzE,KAAKY,sB,GAtERH,aC4INiE,E,4MA/Ib9B,MAAQ,CAENnB,YAAa,GACbrC,KAAM,KACNC,SAAU,I,EA2BZ4E,WAAa,SAAC/D,GACZ,IAAM2B,EAAS,EAAKe,MAAMnB,YAAYkD,MAAM,GAC5C9C,EAAO+C,KAAK1E,GAEZ2E,aAAaC,QACX,WACAC,KAAKC,UAAU,CACbvD,YAAaI,KAIjB,EAAK0B,SAAS,CACZ9B,YAAaI,K,EAOjBoD,cAAgB,SAACpB,GACfgB,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,CACjD3F,SAAU,EAAKuD,MAAMvD,YAGvB,EAAKkE,SAAS,CACZnE,KAAM,CACJC,SAAU,EAAKuD,MAAMvD,UAEvBA,SAAU,Q,EAId6F,aAAe,SAACrB,GAAW,IACjBE,EAAUF,EAAMC,OAAhBC,MACR,EAAKR,SAAS,CACZlE,SAAU0E,K,EAIdhE,aAAe,SAACoF,EAAQhF,GACtB,IAAID,EAAQ,EAAK0C,MAAMnB,YAAY2D,MAAK,SAACvF,GAAD,OAAUA,EAAKM,KAAOA,KAC1DqD,EAAO6B,OAAOC,OAAO,GAAIpF,EAAO,CAAEK,WAAY4E,IAElD,EAAK5B,SACH,CACE9B,YAAa,EAAKmB,MAAMnB,YAAY7B,KAAI,SAACC,GACvC,OAAIA,EAAKM,KAAOA,EAAWqD,EACf3D,OAGhB,WACEgF,aAAaC,QACX,WACAC,KAAKC,UAAU,CAAEvD,YAAa,EAAKmB,MAAMnB,mB,EAKjDd,YAAc,SAACR,GACb,EAAKoD,SACH,CACE9B,YAAa,EAAKmB,MAAMnB,YAAY8D,QAAO,SAAC1F,GAAD,OAAUA,EAAKM,KAAOA,OAEnE,WACE0E,aAAaC,QACX,WACAC,KAAKC,UAAU,CAAEvD,YAAa,EAAKmB,MAAMnB,mB,EAKjDb,cAAc,SAACT,GACb6C,QAAQC,IAAI,qB,EAMduC,OAAS,WACP,EAAKjC,SAAS,CAAEnE,KAAM,OACtByF,aAAaY,WAAW,gB,kEAvGxB,IAAMhE,EAAcoD,aAAaa,QAAQ,YACnCC,EAAcd,aAAaa,QAAQ,eACzC,GAAIC,EAAa,CACf,IAAMC,EAAab,KAAKc,MAAMF,GAC9B3F,KAAKuD,SAAS,CACZnE,KAAMwG,IAKV,GAAInE,EACF,IACE,IAAMqE,EAASf,KAAKc,MAAMpE,GAC1BzB,KAAKuD,SAAS,CACZ9B,YAAaqE,EAAOrE,cAEtB,MAAOkC,GACPX,QAAQC,IAAI,sC,+BA0FR,IAAD,EACuBjD,KAAK4C,MAA3BnB,EADD,EACCA,YAAarC,EADd,EACcA,KAErB,OADA4D,QAAQC,IAAIxB,GAEV,yBAAKrB,UAAU,OACb,kBAAC,EAAD,CAAQhB,KAAMA,EAAMI,SAAUQ,KAAKwF,SAClCpG,EACC,kBAAC,IAAMoC,SAAP,KACE,kBAAC0C,EAAA,EAAD,CAAW6B,SAAS,MAClB,kBAAC,EAAD,CAAQ9B,WAAYjE,KAAKiE,cAE3B,kBAACC,EAAA,EAAD,CAAW6B,SAAS,MAClB,kBAAC,EAAD,CAAWtE,YAAaA,EAAa1B,aAAcC,KAAKD,aAAcY,YAAaX,KAAKW,YAAYC,cAAeZ,KAAKY,kBAI1H,kBAACsD,EAAA,EAAD,CAAW6B,SAAS,MAClB,6CACA,gDACA,kBAAC5B,EAAA,EAAD,CAAWE,MAAM,OAAOE,SAAUvE,KAAKkF,eACvC,kBAAC5F,EAAA,EAAD,CAAQH,QAAQ,YAAaI,QAASS,KAAKiF,eAA3C,c,GAxIItD,IAAMlB,WCKJuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdpD,OAAM,SAAAC,GACLX,QAAQW,MAAMA,EAAMoD,c","file":"static/js/main.a7197e72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"Rating_star__2Y3EY\",\"starr\":\"Rating_starr__2oHC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__GH0mn\",\"search\":\"Search_search__3nn0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"ResultsList_poster__3hrGo\"};","import React from 'react'\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          style={{\r\n            flexGrow: 1,\r\n          }}\r\n          variant=\"h6\">\r\n          \r\n          Movie List \r\n        </Typography>\r\n        {props.user && <span>{props.user.userName}</span>}\r\n        {props.user && (\r\n          <Button onClick={props.onLogout} color=\"inherit\">\r\n            Logout\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nimport Star from \"@material-ui/icons/Star\";\r\n\r\nimport { Icon } from \"@material-ui/core\";\r\nimport styles from \"./Rating.module.css\";\r\n\r\n \r\nclass Rating extends Component {\r\n  \r\n\r\n  render() {\r\n    const ratings = [...Array(5)].map((item, index) => index + 1);\r\n    const { changeRating } = this.props;\r\n\r\n    return (\r\n      <div>\r\n            {ratings.map((item) => {\r\n          return (\r\n            <Icon onClick={() => changeRating(item,this.props.movie.id)} className={styles.star}  > \r\n             {item<=(this.props.movie.userRating || 0 ) ? <Star className={styles.star} />  : <Star className={styles.starr} />}\r\n            </Icon>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  CardActions,\r\n  Button,\r\n  Typography,\r\n  \r\n} from '@material-ui/core'\r\n import Rating from \"./Rating\"\r\n import FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\n\r\n\r\nconst MovieCard = (props) => {\r\n  const { movie,changeRating,deleteMovie,favoriteMovie} = props;\r\n  return (\r\n    <Card>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <CardMedia image=\"\" description=\"movie poster\"></CardMedia>\r\n          <Typography variant=\"h5\">{movie.original_title}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {movie.release_date}\r\n          </Typography>\r\n          <div>\r\n            <Rating changeRating={changeRating} movie={movie}/>\r\n          </div>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={()=>deleteMovie(movie.id)} >\r\n          Delete \r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={()=>favoriteMovie(movie.id)} >\r\n          <FavoriteBorderIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MovieCard","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport MovieCard from './MovieCard'\r\n\r\nclass MovieList extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.savedMovies.length > 0\r\n          ? this.props.savedMovies.map((item) => <MovieCard movie={item} changeRating={this.props.changeRating} deleteMovie={this.props.deleteMovie} favoriteMovie={this.props.favoriteMovie}/>)\r\n          : 'Search for a movie and add it to your list.'}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MovieList","import React from \"react\";\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport styles from \"./ResultsList.module.css\";\r\n\r\nconst getPosterUrl = (imageUri) => {\r\n  if (imageUri) return `https://image.tmdb.org/t/p/w200${imageUri}`;\r\n  else return \"https://via.placeholder.com/200x300\";\r\n};\r\n\r\nconst ResultsList = (props) => (\r\n  <React.Fragment>\r\n    {props.movies.map((item) => (\r\n      <Grid container xs={12}>\r\n        <Grid item xs={2}>\r\n          <img\r\n            alt=\"\"\r\n            src={getPosterUrl(item.poster_path)}\r\n            className={styles.poster}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          {item.original_title}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          {item.release_date}\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={() => props.onAdd(item)}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    ))}\r\n  </React.Fragment>\r\n);\r\n\r\nexport default ResultsList;\r\n","  \r\nconst Settings = {\r\n    API_URL: 'https://api.themoviedb.org/3',\r\n    API_KEY: '5cb751e64855ab4548a6d298c4270eea',\r\n    USER_SECRET: ''\r\n  }\r\n  \r\n  export default Settings;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport ResultsList from \"./ResultsList\";\r\n\r\nimport Settings from \"../../config/Settings\";\r\n\r\nimport styles from \"./Search.module.css\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchResults: [],\r\n    searchTerm: \"\",\r\n  };\r\n\r\n  handleSearch = () => {\r\n    console.log(this.state.searchTerm);\r\n    const { API_URL, API_KEY } = Settings;\r\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&query=Terminator\r\n    const url = `${API_URL}/search/movie?api_key=${API_KEY}&query=${this.state.searchTerm}`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({\r\n          searchResults: response.data.results,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n    //     const myPromise = (param) => new Promise((resolve,reject)=>{\r\n    // if (param==1){\r\n    //   resolve(\"Ok\")\r\n    // }\r\n    // else {\r\n    //   reject (\"number is incorect\")\r\n    // }\r\n    //     })\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      searchTerm: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleAdd = (movie) => {\r\n    this.setState({\r\n      searchResults: [],\r\n      searchTerm: \"\",\r\n    });\r\n    this.props.onMovieAdd(movie);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Container className={styles.container}>\r\n          <TextField\r\n            placeholder=\"Type the name of a movie...\"\r\n            label=\"Search\"\r\n            variant=\"outlined\"\r\n            className={styles.search}\r\n            value={this.state.searchTerm}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"normal\"\r\n            startIcon={<SearchIcon />}\r\n            onClick={this.handleSearch}\r\n          >\r\n            Search\r\n          </Button>\r\n        </Container>\r\n        {this.state.searchResults.length > 0 && (\r\n          <Container className={styles.results}>\r\n            <ResultsList\r\n              movies={this.state.searchResults}\r\n              onAdd={this.handleAdd}\r\n              favorite={this.favoriteMovie}\r\n            />\r\n          </Container>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport Header from './shared/header/Header'\r\nimport { Grid, Container, TextField, Button } from '@material-ui/core'\r\n\r\nimport MovieList from './components/movieList/MovieList'\r\nimport Search from './components/search/Search'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    \r\n    savedMovies: [],\r\n    user: null,\r\n    userName: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const savedMovies = localStorage.getItem('userData')\r\n    const userDetails = localStorage.getItem('userDetails')\r\n    if (userDetails) {\r\n      const parsedUser = JSON.parse(userDetails)\r\n      this.setState({\r\n        user: parsedUser,\r\n      })\r\n    } else {\r\n      // handle redirect to login?\r\n    }\r\n    if (savedMovies) {\r\n      try {\r\n        const parsed = JSON.parse(savedMovies)\r\n        this.setState({\r\n          savedMovies: parsed.savedMovies,\r\n        })\r\n      } catch (error) {\r\n        console.log('App crashed check user input...')\r\n      }\r\n    }\r\n  }  \r\n\r\n\r\n  onMovieAdd = (movie) => {\r\n    const movies = this.state.savedMovies.slice(0)\r\n    movies.push(movie)\r\n\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        savedMovies: movies,\r\n      }),\r\n    )\r\n\r\n    this.setState({\r\n      savedMovies: movies,\r\n    })\r\n  }\r\n \r\n\r\n \r\n\r\n  handleAddUser = (event) => {\r\n    localStorage.setItem('userDetails', JSON.stringify({\r\n      userName: this.state.userName\r\n    }))\r\n\r\n    this.setState({\r\n      user: {\r\n        userName: this.state.userName\r\n      },\r\n      userName: null\r\n    })\r\n  }\r\n\r\n  onUserChange = (event) => {\r\n    const { value } = event.target\r\n    this.setState({\r\n      userName: value\r\n    })\r\n  }\r\n\r\n  changeRating = (rating, id) => {\r\n    var movie = this.state.savedMovies.find((item) => item.id === id);\r\n    var data = Object.assign({}, movie, { userRating: rating });\r\n\r\n    this.setState(\r\n      {\r\n        savedMovies: this.state.savedMovies.map((item) => {\r\n          if (item.id === id) return data;\r\n          else return item;\r\n        }),\r\n      },\r\n      () => {\r\n        localStorage.setItem(\r\n          \"userData\",\r\n          JSON.stringify({ savedMovies: this.state.savedMovies })\r\n        );\r\n      }\r\n    );\r\n  };\r\n  deleteMovie = (id) => {\r\n    this.setState(\r\n      {\r\n        savedMovies: this.state.savedMovies.filter((item) => item.id !== id),\r\n      },\r\n      () => {\r\n        localStorage.setItem(\r\n          \"userData\",\r\n          JSON.stringify({ savedMovies: this.state.savedMovies })\r\n        );\r\n      }\r\n    );\r\n  };\r\n  favoriteMovie=(id)=>{\r\n    console.log(\"hello from heart\")\r\n    \r\n    }\r\n\r\n\r\n\r\n  logout = () => {\r\n    this.setState({ user: null })\r\n    localStorage.removeItem('userDetails')\r\n  }\r\n\r\n\r\n  render() {\r\n    const { savedMovies, user } = this.state\r\n    console.log(savedMovies)\r\n    return (\r\n      <div className=\"App\">\r\n        <Header user={user} onLogout={this.logout} />\r\n        {user ? (\r\n          <React.Fragment>\r\n            <Container maxWidth=\"md\">\r\n              <Search onMovieAdd={this.onMovieAdd} />\r\n            </Container>\r\n            <Container maxWidth=\"md\">\r\n              <MovieList savedMovies={savedMovies} changeRating={this.changeRating} deleteMovie={this.deleteMovie}favoriteMovie={this.favoriteMovie} />\r\n            </Container>\r\n          </React.Fragment>\r\n        ) : (\r\n            <Container maxWidth=\"md\">\r\n              <h2>Please Login!</h2>\r\n              <h4>Type your name !</h4>\r\n              <TextField label=\"Name\" onChange={this.onUserChange} />\r\n              <Button variant=\"contained\"  onClick={this.handleAddUser} >Save</Button>\r\n            </Container>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}